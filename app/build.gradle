buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}


android {
    compileSdkVersion 23
    buildToolsVersion "23.0.1"

    defaultConfig {
        applicationId "it.cnr.iit.thesapp"
        minSdkVersion 15
        targetSdkVersion 23
        final MAJOR_RELEASE = 1
        final MINOR_RELEASE = 10
        versionCode getVersionCodeNumber(MAJOR_RELEASE, MINOR_RELEASE)
        versionName getVersionCodeName(MAJOR_RELEASE, MINOR_RELEASE)
        multiDexEnabled true
    }

    lintOptions {
        abortOnError false
    }

    signingConfigs {
        releaseConfig {
            storeFile file("thesapp_test_keystore.jks");
            storePassword("elioscamerino");
            keyAlias "elios";
            keyPassword "elioscamerino";
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //signingConfig signingConfigs.releaseConfig
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def file = output.outputFile
                    output.outputFile = new File(file.parent, "ThesApp_" + defaultConfig.versionName + "_(" + defaultConfig.versionCode + ")" + ".apk")
                }
            }

        }
        debug {
            minifyEnabled false
            debuggable true
            applicationIdSuffix ".debug"
            versionNameSuffix "_debug"
        }

    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile 'com.google.android.gms:play-services-gcm:8.1.0'
    compile 'com.android.support:appcompat-v7:23.0.1'
    compile 'com.android.support:cardview-v7:23.0.1'
    compile 'com.android.support:palette-v7:23.0.1'
    compile 'com.android.support:recyclerview-v7:23.0.1'
    compile 'com.android.support:support-v13:23.0.1'
    compile 'com.android.support:support-v4:23.0.1'
    compile 'com.github.johnkil.android-robototextview:robototextview:2.4.2'
    compile 'org.apmem.tools:layouts:1.10@aar'
    compile 'com.wunderlist:sliding-layer:1.2.5'
    compile 'com.google.code.gson:gson:2.3.1'
    compile 'com.squareup.okhttp:okhttp:2.5.0'
    compile 'com.squareup.retrofit:retrofit:1.9.0'
    compile 'de.greenrobot:eventbus:2.4.0'
    compile 'com.github.clemp6r.futuroid:futuroid:1.0.0'
    compile('com.crashlytics.sdk.android:crashlytics:2.5.2@aar') {
        transitive = true;
    }
}


def getVersionCodeName(int major, int minor) {
    def versionCodeName = major * 100 + minor
    return "${versionCodeName}"
}

def getVersionCodeNumber(int major, int minor) {
    def versionCodeName = major * 100 + minor
    return versionCodeName
}
